{"version":3,"sources":["images/Normal.png","images/Fire.png","images/Water.png","images/Grass.png","images/Electric.png","images/Ice.png","images/Ground.png","images/Flying.png","images/Poison.png","images/Fighting.png","images/Psychic.png","images/Dark.png","images/Rock.png","images/Bug.png","images/Ghost.png","images/Steel.png","images/Dragon.png","images/Fairy.png","Type.js","App.js","serviceWorker.js","index.js","images/Pokemon_symbol.png"],"names":["module","exports","__webpack_require__","p","types","","symbol","bgcolor","Normal","Fire","Water","Grass","Electric","Ice","Ground","Flying","Poison","Fighting","Psychic","Dark","Rock","Bug","Ghost","Steel","Dragon","Fairy","tenTypes","Object","keys","slice","Type","state","typeDangChon","gioiThieuType","type","_this","setState","_this2","this","react_default","a","createElement","className","align","Image","src","size","Grid","columns","doubling","map","moiType","Column","Button","onClick","style","backgroundColor","color","Icon","name","Component","App","dangXemGi","handleItemClick","e","_ref","activeItem","bamHome","Menu","borderless","inverted","Item","active","poke_logo","src_Type","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be2a8cd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Normal.a03d675a.png\";","module.exports = __webpack_public_path__ + \"static/media/Fire.e20a8db1.png\";","module.exports = __webpack_public_path__ + \"static/media/Water.1296d91b.png\";","module.exports = __webpack_public_path__ + \"static/media/Grass.80efee71.png\";","module.exports = __webpack_public_path__ + \"static/media/Electric.8e64be41.png\";","module.exports = __webpack_public_path__ + \"static/media/Ice.6e7d5d94.png\";","module.exports = __webpack_public_path__ + \"static/media/Ground.487e5faf.png\";","module.exports = __webpack_public_path__ + \"static/media/Flying.72131126.png\";","module.exports = __webpack_public_path__ + \"static/media/Poison.7192956d.png\";","module.exports = __webpack_public_path__ + \"static/media/Fighting.739e0341.png\";","module.exports = __webpack_public_path__ + \"static/media/Psychic.5d4ad538.png\";","module.exports = __webpack_public_path__ + \"static/media/Dark.e76a0f8a.png\";","module.exports = __webpack_public_path__ + \"static/media/Rock.0c22c73b.png\";","module.exports = __webpack_public_path__ + \"static/media/Bug.683b578d.png\";","module.exports = __webpack_public_path__ + \"static/media/Ghost.ae489523.png\";","module.exports = __webpack_public_path__ + \"static/media/Steel.a6bab6c1.png\";","module.exports = __webpack_public_path__ + \"static/media/Dragon.9a6f3f5f.png\";","module.exports = __webpack_public_path__ + \"static/media/Fairy.844bf972.png\";","//Phần 1: các Import\nimport React, { Component } from 'react'\nimport { Button, Icon, Image, Grid } from 'semantic-ui-react'\nimport Normal from './images/Normal.png';\nimport Fire from './images/Fire.png';\nimport Water from './images/Water.png';\nimport Grass from './images/Grass.png';\nimport Electric from './images/Electric.png';\nimport Ice from './images/Ice.png';\nimport Ground from './images/Ground.png';\nimport Flying from './images/Flying.png';\nimport Poison from './images/Poison.png';\nimport Fighting from './images/Fighting.png';\nimport Psychic from './images/Psychic.png';\nimport Dark from './images/Dark.png';\nimport Rock from './images/Rock.png';\nimport Bug from './images/Bug.png';\nimport Ghost from './images/Ghost.png';\nimport Steel from './images/Steel.png';\nimport Dragon from './images/Dragon.png';\nimport Fairy from './images/Fairy.png';\n//import './Type.css';\nconst types = {\n  '' : {symbol: null, bgcolor: null},\n  'Normal' : {symbol : Normal, bgcolor: '#a8a878'},\n  'Fire' : {symbol : Fire, bgcolor: '#f08030'},\n  'Water' : {symbol : Water, bgcolor: '#6890f0'},\n  'Grass' : {symbol : Grass, bgcolor: '#78c850'},\n  'Electric' : {symbol : Electric, bgcolor: '#f8d030'},\n  'Ice' : {symbol : Ice, bgcolor: '#98d8d8'},\n  'Ground' : {symbol : Ground, bgcolor: '#e0c068'},\n  'Flying' : {symbol : Flying, bgcolor: '#a890f0'},\n  'Poison' : {symbol : Poison, bgcolor: '#a040a0'},\n  'Fighting' : {symbol : Fighting, bgcolor: '#c03028'},\n  'Psychic' : {symbol : Psychic, bgcolor: '#f85888'},\n  'Dark' : {symbol : Dark, bgcolor: '#705848'},\n  'Rock' : {symbol : Rock, bgcolor: '#b8a038'},\n  'Bug' : {symbol : Bug, bgcolor: '#a8b820'},\n  'Ghost' : {symbol : Ghost, bgcolor: '#705898'},\n  'Steel' : {symbol : Steel, bgcolor: '#b8b8d0'},\n  'Dragon' : {symbol : Dragon, bgcolor: '#7038f8'},\n  'Fairy' : {symbol : Fairy, bgcolor: '#ffaec9'},\n}\nconst tenTypes = Object.keys(types).slice(1, 19);\nclass Type extends Component {\n//Phần 2: các State\n  state = {\n    typeDangChon: \"\",\n  }\n  //Phần 3: các Function\n  gioiThieuType = (type) => {\n    // alert(\"This is Pokemon \" + type);\n    if(this.state.typeDangChon === type) {\n      this.setState({ typeDangChon: \"\" });\n    }\n    else {\n      this.setState({ typeDangChon: type });\n    }\n  };\n  render() {\n    var {typeDangChon} = this.state;\n    //const {  } = this.props\n    return (\n      <div className=\"Type\" align='center'>\n        <h1>All Types of Pokemon {typeDangChon}</h1>\n        <Image src={types[typeDangChon].symbol} size='mini' />\n        <br/>\n        <Grid columns={6} doubling >\n          { tenTypes.map(\n              (moiType) => \n              <Grid.Column>\n                <Button onClick={() => this.gioiThieuType(moiType)} style={{backgroundColor: types[moiType].bgcolor, color:'white'}}>\n                  { typeDangChon=== moiType\n                    ? <Icon name='check'  />\n                    : null\n                  }\n                  {moiType}\n                </Button>\n              </Grid.Column>\n            )\n          }\n        </Grid>\n      </div>\n    )\n  }\n}\nexport default Type;","\n//Phần 1: các Import\nimport React, { Component } from 'react'\nimport { Menu, Image } from 'semantic-ui-react'\n\nimport poke_logo from './images/Pokemon_symbol.png';\n\nimport './App.css';\n\nimport Type from './Type';\n\nclass App extends Component {\n\n//Phần 2: các State\n  state = {\n    dangXemGi: \"dangXemHome\",\n  }\n\n//Phần 3: các Function\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n  }\n  \n  \n  bamHome = () => {\n    this.setState({dangXemGi:\"dangXemHome\", activeItem: \"\" });\n  }\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <div className=\"App\">\n        <Menu borderless inverted style={{backgroundColor:'#8B0000'}}>\n          \n          <Menu.Item\n            name='Pokedex'\n            active={activeItem === 'Pokedex'}\n            onClick={this.bamHome} >\n            <Image src={poke_logo} size='mini' />\n            <b>Pokedex</b>\n          </Menu.Item>\n\n          <Menu.Item\n            name='all'\n            active={activeItem === 'all'}\n            onClick={this.handleItemClick}>\n            All\n          </Menu.Item>\n\n          <Menu.Item\n            name='type'\n            active={activeItem === 'type'}\n            onClick={this.handleItemClick}>\n            Type\n          </Menu.Item>\n\n          <Menu.Item\n            name='compare'\n            active={activeItem === 'compare'}\n            onClick={this.handleItemClick}>\n            Compare\n          </Menu.Item>\n\n          <Menu.Item\n            name='trainer'\n            active={activeItem === 'trainer'}\n            onClick={this.handleItemClick}>\n            Trainer\n          </Menu.Item>\n\n          <Menu.Item\n            name='pokeball'\n            active={activeItem === 'pokeball'}\n            onClick={this.handleItemClick}>\n            Pokeball\n          </Menu.Item>\n\n          <Menu.Item\n            name='about'\n            active={activeItem === 'about'}\n            onClick={this.handleItemClick}>\n            About\n          </Menu.Item>\n\n        </Menu>\n\n        <Type></Type>\n\n        <br/><br/>\n\n        <header className=\"App-header\">\n          <img src={poke_logo} className=\"App-logo\" alt=\"poke_logo\" />\n        </header>\n        \n      </div>\n\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Pokemon_symbol.99651ad2.png\";"],"sourceRoot":""}