{"version":3,"sources":["Type.js","App.js","serviceWorker.js","index.js","images/Pokemon_symbol.png"],"names":["Type","state","typeDangChon","gioiThieuType","type","_this","setState","_this2","this","react_default","a","createElement","className","Button","onClick","style","backgroundColor","color","Icon","name","Component","App","handleItemClick","e","_ref","activeItem","Menu","borderless","inverted","Item","active","Image","src","poke_logo","size","src_Type","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ae54c821.chunk.js","sourcesContent":["\n//Phần 1: các Import\nimport React, { Component } from 'react'\nimport { Button, Icon } from 'semantic-ui-react'\n\n\n//import './Type.css';\n\n\n\nclass Type extends Component {\n\n//Phần 2: các State\n  state = {\n    typeDangChon: \"\",\n    \n  }\n\n  //Phần 3: các Function\n  gioiThieuType = (type) => {\n    // alert(\"This is Pokemon \" + type);\n    this.setState({ typeDangChon: type });\n  };\n\n  render() {\n    var {typeDangChon} = this.state;\n    //const {  } = this.props\n    return (\n      <div className=\"Type\">\n        <h1>All Types of Pokemon {typeDangChon}</h1>\n        {/* <Image  /> */}\n        <Button onClick={() => this.gioiThieuType('Normal')} style={{backgroundColor:'#a8a878', color:'white'}}>\n          { typeDangChon===\"Normal\"\n            ? <Icon name='check' />\n            : null\n          }\n          Normal\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Fire')} style={{backgroundColor:'#f08030', color:'white'}}>\n          { typeDangChon===\"Fire\"\n            ? <Icon name='check' />\n            : null\n          }\n          Fire\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Water')} style={{backgroundColor:'#6890f0', color:'white'}}>\n          { typeDangChon===\"Water\"\n            ? <Icon name='check' />\n            : null\n          }\n          Water\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Grass')} style={{backgroundColor:'#78c850', color:'white'}}>\n          { typeDangChon===\"Grass\"\n            ? <Icon name='check' />\n            : null\n          }\n          Grass\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Electric')} style={{backgroundColor:'#f8d030', color:'white'}}>\n          { typeDangChon===\"Electric\"\n            ? <Icon name='check' />\n            : null\n          }\n          Electric\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Ice')} style={{backgroundColor:'#98d8d8', color:'white'}}>\n          { typeDangChon===\"Ice\"\n            ? <Icon name='check' />\n            : null\n          }\n          Ice\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Ground')} style={{backgroundColor:'#e0c068', color:'white'}}>\n          { typeDangChon===\"Ground\"\n            ? <Icon name='check' />\n            : null\n          }\n          Ground\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Flying')} style={{backgroundColor:'#a890f0', color:'white'}}>\n          { typeDangChon===\"Flying\"\n            ? <Icon name='check' />\n            : null\n          }\n          Flying\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Poison')} style={{backgroundColor:'#a040a0', color:'white'}}>\n          { typeDangChon===\"Poison\"\n            ? <Icon name='check' />\n            : null\n          }\n          Poison\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Fighting')} style={{backgroundColor:'#c03028', color:'white'}}>\n          { typeDangChon===\"Fighting\"\n            ? <Icon name='check' />\n            : null\n          }\n          Fighting\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Psychic')} style={{backgroundColor:'#f85888', color:'white'}}>\n          { typeDangChon===\"Psychic\"\n            ? <Icon name='check' />\n            : null\n          }\n          Psychic\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Dark')} style={{backgroundColor:'#705848', color:'white'}}>\n          { typeDangChon===\"Dark\"\n            ? <Icon name='check' />\n            : null\n          }\n          Dark\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Rock')} style={{backgroundColor:'#b8a038', color:'white'}}>\n          { typeDangChon===\"Rock\"\n            ? <Icon name='check' />\n            : null\n          }\n          Rock\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Bug')} style={{backgroundColor:'#a8b820', color:'white'}}>\n          { typeDangChon===\"Bug\"\n            ? <Icon name='check' />\n            : null\n          }\n          Bug\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Ghost')} style={{backgroundColor:'#705898', color:'white'}}>\n          { typeDangChon===\"Ghost\"\n            ? <Icon name='check' />\n            : null\n          }\n          Ghost\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Steel')} style={{backgroundColor:'#b8b8d0', color:'white'}}>\n          { typeDangChon===\"Steel\"\n            ? <Icon name='check' />\n            : null\n          }\n          Steel\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Dragon')} style={{backgroundColor:'#7038f8', color:'white'}}>\n          { typeDangChon===\"Dragon\"\n            ? <Icon name='check' />\n            : null\n          }\n          Dragon\n        </Button>\n        <Button onClick={() => this.gioiThieuType('Fairy')} style={{backgroundColor:'#ffaec9', color:'white'}}>\n          { typeDangChon===\"Fairy\"\n            ? <Icon name='check' />\n            : null\n          }\n          Fairy\n        </Button>\n\n      </div>\n\n\n\n\n\n\n    )\n  }\n}\nexport default Type;","\n//Phần 1: các Import\nimport React, { Component } from 'react'\nimport { Menu, Image } from 'semantic-ui-react'\n\nimport poke_logo from './images/Pokemon_symbol.png';\nimport './App.css';\n\nimport Type from './Type';\n\nclass App extends Component {\n\n//Phần 2: các State\n  state = {}\n\n//Phần 3: các Function\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <div className=\"App\">\n        <Menu borderless inverted style={{backgroundColor:'#8B0000'}}>\n          \n          <Menu.Item\n            name='pokemon'\n            active={activeItem === 'pokemon'}\n            onClick={this.handleItemClick}>\n            <Image src={poke_logo} size='mini' />\n            <b>Pokedex</b>\n          </Menu.Item>\n\n          <Menu.Item\n            name='all'\n            active={activeItem === 'all'}\n            onClick={this.handleItemClick}>\n            All\n          </Menu.Item>\n\n          <Menu.Item\n            name='type'\n            active={activeItem === 'type'}\n            onClick={this.handleItemClick}>\n            Type\n          </Menu.Item>\n\n          <Menu.Item\n            name='compare'\n            active={activeItem === 'compare'}\n            onClick={this.handleItemClick}>\n            Compare\n          </Menu.Item>\n\n          <Menu.Item\n            name='trainer'\n            active={activeItem === 'trainer'}\n            onClick={this.handleItemClick}>\n            Trainer\n          </Menu.Item>\n\n          <Menu.Item\n            name='pokeball'\n            active={activeItem === 'pokeball'}\n            onClick={this.handleItemClick}>\n            Pokeball\n          </Menu.Item>\n\n          <Menu.Item\n            name='about'\n            active={activeItem === 'about'}\n            onClick={this.handleItemClick}>\n            About\n          </Menu.Item>\n\n        </Menu>\n\n        <Type></Type>\n\n\n        <header className=\"App-header\">\n          <img src={poke_logo} className=\"App-logo\" alt=\"poke_logo\" />\n        </header>\n        \n      </div>\n\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Pokemon_symbol.99651ad2.png\";"],"sourceRoot":""}